{"version":3,"sources":["redux/reducers/errors.reducer.js","redux/reducers/user.reducer.js","redux/reducers/recipe.details.reducer.js","redux/reducers/random.recipe.reducer.js","redux/reducers/browse.by.user.reducer.js","redux/reducers/browse.dish.types.reducer.js","redux/reducers/get.by.dish.reducer.js","redux/reducers/get.by.user.reducer.js","redux/reducers/get.units.reducer.js","redux/reducers/get.dish.list.reducer.js","redux/reducers/user.access.reducer.js","redux/reducers/_root.reducer.js","redux/sagas/add.recipe.saga.js","redux/sagas/browse.by.user.saga.js","redux/sagas/browse.dish.types.saga.js","redux/sagas/get.by.dish.saga.js","redux/sagas/get.by.user.saga.js","redux/sagas/get.random.recipe.saga.js","redux/sagas/get.recipe.details.saga.js","redux/sagas/login.saga.js","redux/sagas/registration.saga.js","redux/sagas/user.saga.js","redux/sagas/get.units.saga.js","redux/sagas/get.dish.list.saga.js","redux/sagas/user.access.saga.js","redux/sagas/user.delete.saga.js","redux/sagas/user.approve.saga.js","redux/sagas/_root.saga.js","components/LogOutButton/LogOutButton.js","redux/mapStoreToProps.js","components/Nav/Nav.js","components/Footer/Footer.js","components/LoginForm/LoginForm.js","components/LoginPage/LoginPage.js","components/ProtectedRoute/ProtectedRoute.js","components/AboutPage/AboutPage.js","components/InfoPage/InfoPage.js","components/LandingPage/LandingPage.js","components/RegisterForm/RegisterForm.js","components/RegisterPage/RegisterPage.js","components/BrowseCreator/BrowseCreator.js","components/DishType/DishType.js","components/AllBy/AllBy.js","components/ByDishType/ByDishType.js","components/Details/Details.js","components/AddRecipe/AddRecipe.js","components/AdminPage/AdminPage.js","components/App/App.js","index.js"],"names":["combineReducers","loginMessage","state","action","type","registrationMessage","userReducer","payload","recipeDetails","randomDetails","theCreators","console","log","theDishTypes","theDishes","byUser","theUnits","theDishList","theAccess","rootReducer","errors","user","addRecipe","addRecipeSaga","axios","post","takeLatest","getUsers","getUsersSaga","get","response","put","data","getDishTypes","getDishTypesSaga","getByDishType","getByDishTypeSaga","getByUser","getByUserSaga","getRandomDetails","getRandomDetailsSaga","getRecipeDetails","getRecipeDetailsSaga","loginUser","logoutUser","loginSaga","config","headers","withCredentials","status","registerUser","registrationSaga","fetchUser","userSaga","getUnits","getUnitsSaga","getDishList","getDishListSaga","getAccess","getAccessSaga","delUser","delUserSaga","delete","updateUser","updateUserSaga","rootSaga","all","connect","props","className","onClick","dispatch","mapStoreToProps","reduxState","store","loginLinkData","path","text","id","access_level","Grid","container","spacing","direction","justify","item","to","adminDataLink","LoginForm","username","password","login","event","preventDefault","handleInputChangeFor","propertyName","setState","target","value","onSubmit","this","role","htmlFor","name","required","onChange","Component","LoginPage","history","push","ComponentToShow","ComponentToProtect","component","authRedirect","otherProps","exact","from","AboutPage","InfoPage","LandingPage","ingredients","ingredientList","undefined","map","index","posted","updated","date_updated","updatedYear","substring","updatedMonth","updatedDay","date_posted","postedYear","image","picture","src","alt","recipe_name","xs","style","textAlign","first_name","align","Box","brief_description","pb","mb","borderBottom","pt","borderTop","prep_time","cook_time","listStyleType","margin","padding","sm","whiteSpace","instructions","RegisterForm","firstName","lastName","email","RegisterPage","BrowseCreator","handleClickCreator","creatorList","BrowseDishType","handleClickDishType","dishList","dish_types","AllBy","handleClickRecipe","match","params","creator","recipeList","i","length","recipeImage","alignItems","ByDishType","dish","Details","wrap","AddRecipe","recipe","user_id","dish_id","materials","ingredient","quantity","unit_id","handleChangeFor","handleCheckbox","handleSave","addIngredients","ingredientFields","el","placeholder","handleIngredientChange","bind","handleSelect","unit","Button","variant","FormControlLabel","control","Checkbox","color","toString","label","rows","cols","marginTop","textDecoration","AdminPage","handleDelete","currentTarget","handleApprove","userList","marginBottom","last_name","size","App","DishType","render","sagaMiddleware","createSagaMiddleware","middlewareList","createStore","applyMiddleware","run","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.35257d68.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\n\n// loginMessage holds the string that will display\n// on the login screen if there's an error\nconst loginMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_LOGIN_ERROR':\n      return '';\n    case 'LOGIN_INPUT_ERROR':\n      return 'Enter your username and password!';\n    case 'LOGIN_FAILED':\n      return \"Oops! The username and password didn't match. Try again!\";\n    case 'LOGIN_FAILED_NO_CODE':\n      return 'Oops! Something went wrong! Is the server running?';\n    default:\n      return state;\n  }\n};\n\n// registrationMessage holds the string that will display\n// on the registration screen if there's an error\nconst registrationMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_REGISTRATION_ERROR':\n      return '';\n    case 'REGISTRATION_INPUT_ERROR':\n      return 'Choose a username and password!';\n    case 'REGISTRATION_FAILED':\n      return \"Oops! That didn't work. The username might already be taken. Try again!\";\n    default:\n      return state;\n  }\n};\n\n// make one object that has keys loginMessage, registrationMessage\n// these will be on the redux state at:\n// state.errors.loginMessage and state.errors.registrationMessage\nexport default combineReducers({\n  loginMessage,\n  registrationMessage,\n});\n","const userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.payload;\n    case 'UNSET_USER':\n      return {};\n    default:\n      return state;\n  }\n};\n\n// user will be on the redux state at:\n// state.user\nexport default userReducer;\n","// Used to store recipe details returned from the server\nconst recipeDetails = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_RECIPE_DETAILS':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default recipeDetails;\n","// Used to store random recipe details returned from the server\nconst randomDetails = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_RANDOM_DETAILS':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default randomDetails;\n","// Used to store list of creators from the server\nconst theCreators = (state = [], action) => {\n  console.log(action.payload);\n  switch (action.type) {\n    case 'SET_CREATORS':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default theCreators;\n","// Used to store list of creators from the server\nconst theDishTypes = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_DISH_TYPES':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default theDishTypes;\n","// Used to store list of recipes by dish type from the server\nconst theDishes = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_BY_DISH_TYPE':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default theDishes;\n","// Used to store recipe list by user returned from the server\nconst byUser = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_BY_USER':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default byUser;\n","// Used to store list of units of measurement from the server\nconst theUnits = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_UNITS':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default theUnits;\n","// Used to store list of dish types on the server\nconst theDishList = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_DISH_LIST':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default theDishList;\n","const theAccess = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_ACCESS':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default theAccess;\n","import { combineReducers } from 'redux';\nimport errors from './errors.reducer';\nimport user from './user.reducer';\nimport recipeDetails from './recipe.details.reducer';\nimport randomDetails from './random.recipe.reducer';\nimport theCreators from './browse.by.user.reducer';\nimport theDishTypes from './browse.dish.types.reducer';\nimport theDishes from './get.by.dish.reducer';\nimport byUser from './get.by.user.reducer';\nimport theUnits from './get.units.reducer';\nimport theDishList from './get.dish.list.reducer';\nimport theAccess from './user.access.reducer';\n\n// rootReducer is the primary reducer for our entire project\n// It bundles up all of the other reducers so our project can use them.\n// This is imported in index.js as rootSaga\n\n// Lets make a bigger object for our store, with the objects from our reducers.\n// This is what we get when we use 'state' inside of 'mapStateToProps'\nconst rootReducer = combineReducers({\n  errors, // contains registrationMessage and loginMessage\n  user, // will have an id and username if someone is logged in\n  recipeDetails, // contains all the details to be displayed on details page\n  randomDetails, // contains the details from the randomly selected recipe for the home page\n  theCreators, // contains the list of people who've created recipes for browsing by\n  theDishTypes, // contains the list of types of dishes with recipes associated\n  theDishes, // contains the list of recipes by dish type\n  byUser, // contains the list of recipes by a specific person\n  theUnits, // contains the list of units of measurement\n  theDishList, // contains the list of dish types\n  theAccess, // contains access levels of users for admin page\n});\n\nexport default rootReducer;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction* addRecipe(action) {\n  try {\n    console.log(action.payload);\n    yield axios.post(`/api/recipe`, action.payload);\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* addRecipeSaga() {\n  yield takeLatest('ADD_RECIPE', addRecipe);\n}\n\nexport default addRecipeSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n// GET All users who've submitted recipes\n// START GET for browse creators\nfunction* getUsers(action) {\n  try {\n    const response = yield axios.get(`/api/recipe/user`);\n    yield put({\n      type: 'SET_CREATORS',\n      payload: response.data,\n    });\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* getUsersSaga() {\n  yield takeLatest('GET_CREATORS', getUsers);\n}\n\nexport default getUsersSaga;\n// END GET for browse creators\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n// GET All dish types with a recipe\n// START GET for browse dish type\nfunction* getDishTypes(action) {\n  try {\n    const response = yield axios.get(`/api/recipe/dish`);\n    console.log('SAGA', response);\n    yield put({\n      type: 'SET_DISH_TYPES',\n      payload: response.data,\n    });\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* getDishTypesSaga() {\n  yield takeLatest('GET_DISH_TYPES', getDishTypes);\n}\n\nexport default getDishTypesSaga;\n// END GET for browse dish type\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n// GET All recipes by dish types\n// START GET for browsing by dish type\nfunction* getByDishType(action) {\n  try {\n    const response = yield axios.get(`/api/recipe/dish/${action.payload}`);\n    yield put({\n      type: 'SET_BY_DISH_TYPE',\n      payload: response.data,\n    });\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* getByDishTypeSaga() {\n  yield takeLatest('GET_BY_DISH_TYPES', getByDishType);\n}\n\nexport default getByDishTypeSaga;\n// END GET for browsing by dish type\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n// Everything by a specific user\n// START GET for browse by creator\nfunction* getByUser(action) {\n  try {\n    const response = yield axios.get(`/api/recipe/user/${action.payload}`);\n    yield put({\n      type: 'SET_BY_USER',\n      payload: response.data,\n    });\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* getByUserSaga() {\n  yield takeLatest('GET_BY_USER', getByUser);\n}\n\nexport default getByUserSaga;\n// END GET for browse by creator\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// START GET for details for Home page\nfunction* getRandomDetails(action) {\n  try {\n    const response = yield axios.get(`/api/recipe/random`);\n    yield put({\n      type: 'SET_RANDOM_DETAILS',\n      payload: response.data,\n    });\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* getRandomDetailsSaga() {\n  yield takeLatest('GET_RANDOM_DETAILS', getRandomDetails);\n}\n\nexport default getRandomDetailsSaga;\n// END GET for details for Home page\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// START GET for details for Details page\nfunction* getRecipeDetails(action) {\n  try {\n    const response = yield axios.get(`/api/recipe/details/${action.payload}`);\n    yield put({\n      type: 'SET_RECIPE_DETAILS',\n      payload: response.data,\n    });\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* getRecipeDetailsSaga() {\n  yield takeLatest('GET_RECIPE_DETAILS', getRecipeDetails);\n}\n\nexport default getRecipeDetailsSaga;\n// END GET for details for Details page\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"LOGIN\" actions\nfunction* loginUser(action) {\n  try {\n    // clear any existing error on the login page\n    yield put({ type: 'CLEAR_LOGIN_ERROR' });\n\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // send the action.payload as the body\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    yield axios.post('/api/user/login', action.payload, config);\n\n    // after the user has logged in\n    // get the user information from the server\n    yield put({ type: 'FETCH_USER' });\n  } catch (error) {\n    console.log('Error with user login:', error);\n    if (error.response.status === 401) {\n      // The 401 is the error status sent from passport\n      // if user isn't in the database or\n      // if the username and password don't match in the database\n      yield put({ type: 'LOGIN_FAILED' });\n    } else {\n      // Got an error that wasn't a 401\n      // Could be anything, but most common cause is the server is not started\n      yield put({ type: 'LOGIN_FAILED_NO_CODE' });\n    }\n  }\n}\n\n// worker Saga: will be fired on \"LOGOUT\" actions\nfunction* logoutUser(action) {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // when the server recognizes the user session\n    // it will end the session\n    yield axios.post('/api/user/logout', config);\n\n    // now that the session has ended on the server\n    // remove the client-side user object to let\n    // the client-side code know the user is logged out\n    yield put({ type: 'UNSET_USER' });\n  } catch (error) {\n    console.log('Error with user logout:', error);\n  }\n}\n\nfunction* loginSaga() {\n  yield takeLatest('LOGIN', loginUser);\n  yield takeLatest('LOGOUT', logoutUser);\n}\n\nexport default loginSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"REGISTER\" actions\nfunction* registerUser(action) {\n  try {\n    // clear any existing error on the registration page\n    yield put({ type: 'CLEAR_REGISTRATION_ERROR' });\n\n    // passes the username and password from the payload to the server\n    yield axios.post('/api/user/register', action.payload);\n\n    // automatically log a user in after registration\n    yield put({ type: 'LOGIN', payload: action.payload });\n\n    // set to 'login' mode so they see the login screen\n    // after registration or after they log out\n    yield put({ type: 'SET_TO_LOGIN_MODE' });\n  } catch (error) {\n    console.log('Error with user registration:', error);\n    yield put({ type: 'REGISTRATION_FAILED' });\n  }\n}\n\nfunction* registrationSaga() {\n  yield takeLatest('REGISTER', registerUser);\n}\n\nexport default registrationSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n// worker Saga: will be fired on \"FETCH_USER\" actions\nfunction* fetchUser() {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // If a user is logged in, this will return their information\n    // from the server session (req.user)\n    const response = yield axios.get('/api/user', config);\n\n    // now that the session has given us a user object\n    // with an id and username set the client-side user object to let\n    // the client-side code know the user is logged in\n    yield put({ type: 'SET_USER', payload: response.data });\n  } catch (error) {\n    console.log('User get request failed', error);\n  }\n}\n\nfunction* userSaga() {\n  yield takeLatest('FETCH_USER', fetchUser);\n}\n\nexport default userSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction* getUnits(action) {\n  try {\n    const response = yield axios.get(`/api/recipe/units`);\n    console.log('SAGA', response);\n    yield put({\n      type: 'SET_UNITS',\n      payload: response.data,\n    });\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* getUnitsSaga() {\n  yield takeLatest('GET_UNITS', getUnits);\n}\n\nexport default getUnitsSaga;\n// END GET for browsing by dish type\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// GET URL: /api/recipe/dish-types\nfunction* getDishList(action) {\n  try {\n    const response = yield axios.get(`/api/recipe/dish-types`);\n    console.log('SAGA', response);\n    yield put({\n      type: 'SET_DISH_LIST',\n      payload: response.data,\n    });\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* getDishListSaga() {\n  yield takeLatest('GET_DISH_LIST', getDishList);\n}\n\nexport default getDishListSaga;\n// END GET for browsing by dish type\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction* getAccess(action) {\n  try {\n    const response = yield axios.get(`/api/user/access`);\n    console.log('SAGA', response);\n    yield put({\n      type: 'SET_ACCESS',\n      payload: response.data,\n    });\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* getAccessSaga() {\n  yield takeLatest('GET_ACCESS', getAccess);\n}\n\nexport default getAccessSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction* delUser(action) {\n  try {\n    const response = yield axios.delete(`/api/user/del/${action.payload}`);\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* delUserSaga() {\n  yield takeLatest('DELETE_USER', delUser);\n}\n\nexport default delUserSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction* updateUser(action) {\n  try {\n    const response = yield axios.put(`/api/user/update/${action.payload}`);\n    console.log(response);\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* updateUserSaga() {\n  yield takeLatest('APPROVE_USER', updateUser);\n}\n\nexport default updateUserSaga;\n","import { all } from 'redux-saga/effects';\nimport addRecipeSaga from './add.recipe.saga';\nimport getUsersSaga from './browse.by.user.saga';\nimport getDishTypesSaga from './browse.dish.types.saga';\nimport getByDishTypeSaga from './get.by.dish.saga';\nimport getByUserSaga from './get.by.user.saga';\nimport getRandomDetailsSaga from './get.random.recipe.saga';\nimport getRecipeDetailsSaga from './get.recipe.details.saga';\nimport loginSaga from './login.saga';\nimport registrationSaga from './registration.saga';\nimport userSaga from './user.saga';\nimport getUnitsSaga from './get.units.saga';\nimport getDishList from './get.dish.list.saga';\nimport getAccessSaga from './user.access.saga';\nimport delUserSaga from './user.delete.saga';\nimport updateUserSaga from './user.approve.saga';\n\n// rootSaga is the primary saga.\n// It bundles up all of the other sagas so our project can use them.\n// This is imported in index.js as rootSaga\n\n// some sagas trigger other sagas, as an example\n// the registration triggers a login\n// and login triggers setting the user\nexport default function* rootSaga() {\n  yield all([\n    loginSaga(), // login saga is now registered\n    registrationSaga(),\n    userSaga(),\n    addRecipeSaga(),\n    getRecipeDetailsSaga(),\n    getRandomDetailsSaga(),\n    getByUserSaga(),\n    getUsersSaga(),\n    getDishTypesSaga(),\n    getByDishTypeSaga(),\n    getUnitsSaga(),\n    getDishList(),\n    getAccessSaga(),\n    delUserSaga(),\n    updateUserSaga(),\n  ]);\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst LogOutButton = (props) => (\n  <button\n    // This button shows up in multiple locations and is styled differently\n    // because it's styled differently depending on where it is used, the className\n    // is passed to it from it's parents through React props\n    className={props.className}\n    onClick={() => props.dispatch({ type: 'LOGOUT' })}\n  >\n    Log Out\n  </button>\n);\n\n// This component doesn't need 'mapStateToProps'\n// because it doesn't care what the current state is.\n// No matter what the redux state is, this button will always be a log out button\n// this component still needs 'connect' though, because it is going to dispatch a redux action\nexport default connect()(LogOutButton);\n","const mapStoreToProps = (reduxState) => {\n  return {\n    // reduxState properties bound to \"props.store\"\n    // ---------\n    store: reduxState,\n  };\n};\n\nexport default mapStoreToProps;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport LogOutButton from '../LogOutButton/LogOutButton';\nimport './Nav.css';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\n// Import @material-UI\nimport Grid from '@material-ui/core/Grid';\n\nconst Nav = (props) => {\n  let loginLinkData = {\n    path: '/login',\n    text: 'Login ',\n  };\n\n  if (props.store.user.id != null && props.store.user.access_level !== 2) {\n    loginLinkData.path = '/add-new';\n    loginLinkData.text = 'Add Recipe |';\n  } else if (\n    props.store.user.id != null &&\n    props.store.user.access_level === 2\n  ) {\n    loginLinkData.path = '/home';\n    loginLinkData.text = 'Account Pending |';\n  }\n\n  return (\n    <div className=\"nav\">\n      {/* <Link to=\"/home\">\n        <h2 className=\"nav-title\">Prime Solo Project</h2>\n      </Link> */}\n      {/* <Button variant=\"contained\" color=\"primary\">\n        LOGIN\n      </Button> */}\n      <div className=\"nav-center\">\n        <Grid container spacing={1} direction=\"row\" justify=\"center\">\n          {/* <div item style={{ margin: '0px 40px 0px 40px' }}>\n            {' '}\n          </div> */}\n          <Link\n            onClick={() => props.dispatch({ type: 'GET_RANDOM_DETAILS' })}\n            item\n            className=\"nav-link\"\n            to=\"/home\"\n          >\n            Home |\n          </Link>\n          <Link item className=\"nav-link\" to=\"/creator\">\n            Creator |\n          </Link>\n          <Link item className=\"nav-link\" to=\"/dishtype\">\n            Dish Type |\n          </Link>\n          <Link item className=\"nav-link\" to={loginLinkData.path}>\n            {/* Show this link if they are logged in or not,\n          but call this link 'Home' if they are logged in,\n          and call this link 'Login / Register' if they are not */}\n            {loginLinkData.text}\n          </Link>\n          {/* Show the link to the info page and the logout button if the user is logged in */}\n          {props.store.user.id && (\n            <>\n              <LogOutButton item className=\"nav-link\" />\n            </>\n          )}\n          {/* Always show this link since the about page is not protected */}\n          {/* <Link className=\"nav-link\" to=\"/about\">\n              About\n            </Link> */}\n        </Grid>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStoreToProps)(Nav);\n","import React from 'react';\nimport './Footer.css';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Grid from '@material-ui/core/Grid';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\n// This is one of our simplest components\n// It doesn't have local state, so it can be a function component.\n// It doesn't dispatch any redux actions or display any part of redux state\n// or even care what the redux state is, so it doesn't need 'connect()'\n\nconst Footer = (props) => {\n  let adminDataLink = {\n    path: '',\n    text: '',\n  };\n\n  if (props.store.user.access_level === 0) {\n    adminDataLink.path = '/admin';\n    adminDataLink.text = '| Admin';\n  }\n  return (\n    <div className=\"nav-btm\">\n      <Grid container spacing={1} direction=\"row\" justify=\"center\">\n        <Link item className=\"btm-nav-link\" to=\"/about\">\n          About |\n        </Link>\n        <Link item className=\"btm-nav-link\" to=\"/registration\">\n          Register{' '}\n        </Link>\n        <Link\n          item\n          className=\"nav-link\"\n          to={adminDataLink.path}\n          onClick={() => props.dispatch({ type: 'GET_ACCESS' })}\n        >\n          {/* Show this link if they are logged in or not,\n          but call this link 'Home' if they are logged in,\n          and call this link 'Login / Register' if they are not */}\n          {adminDataLink.text}\n        </Link>\n      </Grid>\n    </div>\n  );\n};\n\nexport default connect(mapStoreToProps)(Footer);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\nclass LoginForm extends Component {\n  state = {\n    username: '',\n    password: '',\n  };\n\n  login = (event) => {\n    event.preventDefault();\n\n    if (this.state.username && this.state.password) {\n      this.props.dispatch({\n        type: 'LOGIN',\n        payload: {\n          username: this.state.username,\n          password: this.state.password,\n        },\n      });\n    } else {\n      this.props.dispatch({ type: 'LOGIN_INPUT_ERROR' });\n    }\n  }; // end login\n\n  handleInputChangeFor = (propertyName) => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <form className=\"formPanel\" onSubmit={this.login}>\n        <h2>Login</h2>\n        {this.props.store.errors.loginMessage && (\n          <h3 className=\"alert\" role=\"alert\">\n            {this.props.store.errors.loginMessage}\n          </h3>\n        )}\n        <div>\n          <label htmlFor=\"username\">\n            Username:\n            <input\n              type=\"text\"\n              name=\"username\"\n              required\n              value={this.state.username}\n              onChange={this.handleInputChangeFor('username')}\n            />\n          </label>\n        </div>\n        <div>\n          <label htmlFor=\"password\">\n            Password:\n            <input\n              type=\"password\"\n              name=\"password\"\n              required\n              value={this.state.password}\n              onChange={this.handleInputChangeFor('password')}\n            />\n          </label>\n        </div>\n        <div>\n          <input className=\"btn\" type=\"submit\" name=\"submit\" value=\"Log In\" />\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(LoginForm);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\nimport LoginForm from '../LoginForm/LoginForm';\n\nclass LoginPage extends Component {\n  render() {\n    return (\n      <div>\n        <LoginForm />\n\n        <center>\n          <button\n            type=\"button\"\n            className=\"btn btn_asLink\"\n            onClick={() => {\n              this.props.history.push('/registration');\n            }}\n          >\n            Register\n          </button>\n        </center>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(LoginPage);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport LoginPage from '../LoginPage/LoginPage';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\n// A Custom Wrapper Component -- This will keep our code DRY.\n// Responsible for watching redux state, and returning an appropriate component\n// API for this component is the same as a regular route\n\n// THIS IS NOT SECURITY! That must be done on the server\n// A malicious user could change the code and see any view\n// so your server-side route must implement real security\n// by checking req.isAuthenticated for authentication\n// and by checking req.user for authorization\n\nconst ProtectedRoute = (props) => {\n  // Using destructuring, this takes ComponentToProtect from component\n  // prop and grabs all other props to pass them along to Route\n  const {\n    // Alias prop 'component' as 'ComponentToProtect'\n    component: ComponentToProtect,\n    // redirect path to be used if the user is authorized\n    authRedirect,\n    store,\n    ...otherProps\n  } = props;\n\n  let ComponentToShow;\n\n  if (store.user.id) {\n    // if the user is logged in (only logged in users have ids)\n    // show the component that is protected\n    ComponentToShow = ComponentToProtect;\n  } else {\n    // if they are not logged in, check the loginMode on Redux State\n    // if the mode is 'login', show the LoginPage\n    ComponentToShow = LoginPage;\n  }\n\n  // redirect a logged in user if an authRedirect prop has been provided\n  if (store.user.id && authRedirect != null) {\n    return <Redirect exact from={otherProps.path} to={authRedirect} />;\n  } else if (!store.user.id && authRedirect != null) {\n    ComponentToShow = ComponentToProtect;\n  }\n\n  // We return a Route component that gets added to our list of routes\n  return (\n    <Route\n      // all props like 'exact' and 'path' that were passed in\n      // are now passed along to the 'Route' Component\n      {...otherProps}\n      component={ComponentToShow}\n    />\n  );\n};\n\nexport default connect(mapStoreToProps)(ProtectedRoute);\n","import React from 'react';\n\n// This is one of our simplest components\n// It doesn't have local state, so it can be a function component.\n// It doesn't dispatch any redux actions or display any part of redux state\n// or even care what the redux state is, so it doesn't need 'connect()'\n\nconst AboutPage = () => (\n  <div className=\"container\">\n    <div>\n      <p>This about page is for anyone to read!</p>\n    </div>\n  </div>\n);\n\nexport default AboutPage;\n","import React from 'react';\n\n// This is one of our simplest components\n// It doesn't have local state, so it can be a function component.\n// It doesn't dispatch any redux actions or display any part of redux state\n// or even care what the redux state is, so it doesn't need 'connect()'\n\nconst InfoPage = () => (\n  <div>\n    <p>Info Page</p>\n  </div>\n);\n\n// If you needed to add local state or other things,\n// you can make it a class component like:\n\n/*\nclass InfoPage extends React.Component {\n\n  render() {\n    return (\n      <div>\n        <p>Info Page</p>\n      </div>\n    )\n  }\n}\n*/\nexport default InfoPage;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\nimport './LandingPage.css';\n\n// Import @material-UI\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\n\nclass LandingPage extends Component {\n  componentDidMount() {\n    this.props.dispatch({ type: 'GET_RANDOM_DETAILS' });\n    console.log(this.props.store.randomDetails.ingredients);\n  }\n  render() {\n    let ingredientList;\n    if (this.props.store.randomDetails.ingredients === undefined) {\n      ingredientList = <li key=\"1\">Loading...</li>;\n    } else {\n      ingredientList = this.props.store.randomDetails.ingredients.map(\n        (item, index) => {\n          return <li key={index}>{item} </li>;\n        }\n      );\n    }\n    let updated = '';\n    let posted;\n    if (this.props.store.randomDetails.date_updated != null) {\n      const date_updated = this.props.store.randomDetails.date_updated;\n      const updatedYear = date_updated.substring(0, 4);\n      const updatedMonth = date_updated.substring(5, 7);\n      const updatedDay = date_updated.substring(8, 10);\n      const updatedDate = updatedMonth + '/' + updatedDay + '/' + updatedYear;\n      updated = `Updated: ${updatedDate}`;\n    }\n    if (this.props.store.randomDetails.date_posted != null) {\n      const date_posted = this.props.store.randomDetails.date_posted;\n      const postedYear = date_posted.substring(0, 4);\n      const postedMonth = date_posted.substring(5, 7);\n      const postedDay = date_posted.substring(8, 10);\n      posted = postedMonth + '/' + postedDay + '/' + postedYear;\n    }\n    let image = (\n      <div className=\"medium-food-image-placeholder medium-food-image\"></div>\n    );\n    if (this.props.store.randomDetails.picture != '') {\n      image = (\n        <img\n          className=\"food-image\"\n          src={this.props.store.randomDetails.picture}\n          alt={this.props.store.randomDetails.recipe_name}\n        />\n      );\n    }\n    return (\n      <div className=\"container\">\n        <Grid container spacing={1} direction=\"row\" justify=\"center\">\n          <Grid item xs={12} style={{ textAlign: 'center' }}>\n            <h2 className=\"recipe-title\">\n              {this.props.store.randomDetails.recipe_name}\n            </h2>\n          </Grid>\n          <Grid item xs={12} style={{ textAlign: 'center' }}>\n            <span>\n              Creator: {this.props.store.randomDetails.first_name} Posted:{' '}\n              {posted} {updated}\n            </span>\n          </Grid>\n          <Grid item xs={8} align=\"center\">\n            {image}\n          </Grid>\n          <Grid item xs={7}>\n            <Box>\n              <p style={{ textAlign: 'center' }}>\n                {this.props.store.randomDetails.brief_description}\n              </p>\n            </Box>\n          </Grid>\n          <Grid\n            container\n            item\n            xs={12}\n            spacing={4}\n            direction=\"row\"\n            justify=\"center\"\n          >\n            <Grid item>\n              <Box pb={2} mb={2} borderBottom={1} pt={2} borderTop={1}>\n                <div>Prep Time: {this.props.store.randomDetails.prep_time}</div>\n                <div>Cook Time: {this.props.store.randomDetails.cook_time}</div>\n              </Box>\n              <Box mb={3}>\n                <ul\n                  style={{ listStyleType: 'none', margin: '0', padding: '0' }}\n                >\n                  {ingredientList}\n                </ul>\n              </Box>\n            </Grid>\n            <Grid item xs={12} sm={7}>\n              <Box pt={2} borderTop={1}>\n                <div\n                  className=\"instructions\"\n                  style={{ whiteSpace: 'pre-wrap' }}\n                >\n                  {this.props.store.randomDetails.instructions}\n                </div>\n              </Box>\n            </Grid>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(LandingPage);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\nclass RegisterForm extends Component {\n  state = {\n    username: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n  };\n\n  registerUser = (event) => {\n    event.preventDefault();\n\n    this.props.dispatch({\n      type: 'REGISTER',\n      payload: {\n        username: this.state.username,\n        password: this.state.password,\n        firstName: this.state.firstName,\n        lastName: this.state.lastName,\n        email: this.state.email,\n      },\n    });\n  }; // end registerUser\n\n  handleInputChangeFor = (propertyName) => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <form className=\"formPanel\" onSubmit={this.registerUser}>\n        <h2>Register User</h2>\n        {this.props.store.errors.registrationMessage && (\n          <h3 className=\"alert\" role=\"alert\">\n            {this.props.store.errors.registrationMessage}\n          </h3>\n        )}\n        <div>\n          <label htmlFor=\"username\">\n            Username:\n            <input\n              type=\"text\"\n              name=\"username\"\n              value={this.state.username}\n              required\n              onChange={this.handleInputChangeFor('username')}\n            />\n          </label>\n        </div>\n        <div>\n          <label htmlFor=\"password\">\n            Password:\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={this.state.password}\n              required\n              onChange={this.handleInputChangeFor('password')}\n            />\n          </label>\n        </div>\n        <div>\n          <label htmlFor=\"firstName\">\n            First Name:\n            <input\n              type=\"text\"\n              name=\"firstName\"\n              value={this.state.firstName}\n              required\n              onChange={this.handleInputChangeFor('firstName')}\n            />\n          </label>\n        </div>\n        <div>\n          <label htmlFor=\"lastName\">\n            Last Name:\n            <input\n              type=\"text\"\n              name=\"lastName\"\n              value={this.state.lastName}\n              required\n              onChange={this.handleInputChangeFor('lastName')}\n            />\n          </label>\n        </div>\n        <div>\n          <label htmlFor=\"email\">\n            Email:\n            <input\n              type=\"text\"\n              name=\"email\"\n              value={this.state.email}\n              required\n              onChange={this.handleInputChangeFor('email')}\n            />\n          </label>\n        </div>\n        <div>\n          <input className=\"btn\" type=\"submit\" name=\"submit\" value=\"Register\" />\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(RegisterForm);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\n// CUSTOM COMPONENTS\nimport RegisterForm from '../RegisterForm/RegisterForm';\n\nclass RegisterPage extends Component {\n  state = {\n    username: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n  };\n\n  render() {\n    return (\n      <div>\n        <RegisterForm />\n\n        <center>\n          <button\n            type=\"button\"\n            className=\"btn btn_asLink\"\n            onClick={() => {\n              this.props.history.push('/login');\n            }}\n          >\n            Login\n          </button>\n        </center>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(RegisterPage);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\n// import @material-ui\nimport Grid from '@material-ui/core/Grid';\n\nclass BrowseCreator extends Component {\n  componentDidMount() {\n    // this.props.dispatch({\n    //   type: 'GET_CREATORS',\n    // });\n    console.log(this.props.store.theCreators);\n  }\n\n  //   /api/recipe/user/:id\n  handleClickCreator = (id) => (event) => {\n    console.log(id);\n    this.props.dispatch({\n      type: 'GET_BY_USER',\n    });\n    this.props.history.push(`/creator_dishes/${id}`);\n  };\n\n  render() {\n    console.log('in render', this.props.store.theCreators[0]);\n    let creatorList;\n    if (this.props.store.theCreators === undefined) {\n      creatorList = <li key=\"1\">Loading...</li>;\n    } else {\n      creatorList = this.props.store.theCreators.map((item, index) => {\n        return (\n          <li key={index}>\n            <h3 onClick={this.handleClickCreator(item.id)} item>\n              Recipes Created by {item.first_name}\n            </h3>\n          </li>\n        );\n      });\n    }\n    return (\n      <div>\n        <h2 className=\"browseByTitle\">Browse by Recipe Creator</h2>\n        <Grid container spacing={1} direction=\"row\" justify=\"center\">\n          <Grid item>\n            <ul style={{ listStyleType: 'none' }}>{creatorList}</ul>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(BrowseCreator);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\n// import @material-ui\nimport Grid from '@material-ui/core/Grid';\n\nclass BrowseDishType extends Component {\n  componentDidMount() {\n    // this.props.dispatch({\n    //   type: 'GET_BY_DISH_TYPES',\n    // });\n    console.log(this.props.store);\n  }\n\n  handleClickDishType = (id) => (event) => {\n    console.log('Dish Type Dispatch', id);\n    this.props.dispatch({\n      type: 'GET_BY_DISH_TYPES',\n    });\n    this.props.history.push(`/typeofdish/${id}`);\n  };\n\n  render() {\n    console.log('in render', this.props.store.theDishTypes);\n    let dishList;\n    if (this.props.store.theDishTypes === undefined) {\n      dishList = <li key=\"1\">Loading...</li>;\n    } else {\n      dishList = this.props.store.theDishTypes.map((item, index) => {\n        return (\n          <li key={index}>\n            <h3 onClick={this.handleClickDishType(item.id)} item>\n              {item.dish_types}\n            </h3>\n          </li>\n        );\n      });\n    }\n    return (\n      <div>\n        <h2 className=\"browseByTitle\">Browse by Type of Dish</h2>\n        <Grid container spacing={1} direction=\"row\" justify=\"center\">\n          <Grid item>\n            <ul style={{ listStyleType: 'none' }}>{dishList}</ul>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(BrowseDishType);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\n// import @material-ui\nimport Grid from '@material-ui/core/Grid';\n\n// byUser is the store\nclass AllBy extends Component {\n  componentDidMount() {\n    this.props.dispatch({\n      type: 'GET_BY_USER',\n      payload: this.props.match.params.id,\n    });\n    console.log(this.props.store.byUser);\n    console.log(this.props.store.theCreators);\n    console.log(this.props.match.params.id);\n  }\n\n  handleClickRecipe = (id) => (event) => {\n    console.log(id);\n    this.props.dispatch({\n      type: 'GET_RECIPE_DETAILS',\n      payload: id,\n    });\n    this.props.history.push(`/details/${id}`);\n  };\n\n  render() {\n    let creator;\n    for (let i = 0; i < this.props.store.theCreators.length; i++) {\n      if (this.props.store.theCreators[i].id == this.props.match.params.id) {\n        creator = this.props.store.theCreators[i].first_name;\n        console.log(creator);\n      }\n    }\n    let recipeList;\n    if (this.props.store.byUser === undefined) {\n      recipeList = (\n        <li style={{ textAlign: 'center' }} key=\"1\">\n          Loading...\n        </li>\n      );\n    } else {\n      recipeList = this.props.store.byUser.map((item, index) => {\n        let recipeImage = (\n          <div className=\"small-food-image-placeholder small-food-image\"></div>\n        );\n        if (this.props.store.byUser[index].picture != '') {\n          recipeImage = (\n            <img\n              item\n              className=\"small-food-image\"\n              src={this.props.store.byUser[index].picture}\n              alt={this.props.store.byUser[index].recipe_name}\n            />\n          );\n        }\n        return (\n          <li item style={{ textAlign: 'center' }} key={index}>\n            <h3 onClick={this.handleClickRecipe(item.id)} item>\n              <Grid container spacing={2} alignItems=\"center\">\n                <Grid item>{recipeImage}</Grid>\n                <Grid item>{item.recipe_name}</Grid>\n              </Grid>\n            </h3>\n          </li>\n        );\n      });\n    }\n    return (\n      <div>\n        <h2 style={{ textAlign: 'center' }}>Dishes by {creator}</h2>\n        <Grid container spacing={1} direction=\"row\" justify=\"center\">\n          <Grid item>\n            <ul style={{ listStyleType: 'none' }}>{recipeList}</ul>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(AllBy);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\n// import @material-ui\nimport Grid from '@material-ui/core/Grid';\n\n// theDishes is the store\nclass ByDishType extends Component {\n  componentDidMount() {\n    this.props.dispatch({\n      type: 'GET_BY_DISH_TYPES',\n      payload: this.props.match.params.id,\n    });\n    console.log(this.props.store.theDishes);\n    console.log(this.props.match.params.id);\n  }\n\n  handleClickRecipe = (id) => (event) => {\n    console.log(id);\n    this.props.dispatch({\n      type: 'GET_RECIPE_DETAILS',\n      payload: id,\n    });\n    this.props.history.push(`/details/${id}`);\n  };\n\n  render() {\n    let dish;\n    for (let i = 0; i < this.props.store.theDishTypes.length; i++) {\n      if (this.props.store.theDishTypes[i].id == this.props.match.params.id) {\n        dish = this.props.store.theDishTypes[i].dish_types;\n        console.log(dish);\n      }\n    }\n    let recipeList;\n    if (this.props.store.theDishes === undefined) {\n      recipeList = (\n        <li style={{ textAlign: 'center' }} key=\"1\">\n          Loading...\n        </li>\n      );\n    } else {\n      recipeList = this.props.store.theDishes.map((item, index) => {\n        let recipeImage = (\n          <div className=\"small-food-image-placeholder small-food-image\"></div>\n        );\n        if (this.props.store.theDishes[index].picture != '') {\n          recipeImage = (\n            <img\n              item\n              className=\"small-food-image\"\n              src={this.props.store.theDishes[index].picture}\n              alt={this.props.store.theDishes[index].recipe_name}\n            />\n          );\n        }\n        return (\n          <li item style={{ textAlign: 'center' }} key={index}>\n            <h3 onClick={this.handleClickRecipe(item.id)} item>\n              <Grid container spacing={2} alignItems=\"center\">\n                <Grid item>{recipeImage}</Grid>\n                <Grid item>{item.recipe_name}</Grid>\n              </Grid>\n            </h3>\n          </li>\n        );\n      });\n    }\n    return (\n      <div>\n        <h2 style={{ textAlign: 'center' }}>All {dish} dishes</h2>\n        <Grid container spacing={1} direction=\"row\" justify=\"center\">\n          <Grid item>\n            <ul style={{ listStyleType: 'none' }}>{recipeList}</ul>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(ByDishType);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\n// Import @material-UI\nimport { Grid, Box, Button } from '@material-ui/core/';\n\nclass Details extends Component {\n  componentDidMount() {\n    this.props.dispatch({\n      type: 'GET_RECIPE_DETAILS',\n      payload: this.props.match.params.id,\n    });\n    console.log(this.props.store.recipeDetails.recipe_name);\n  }\n  render() {\n    let ingredientList;\n    if (this.props.store.recipeDetails.ingredients === undefined) {\n      ingredientList = <li key=\"1\">Loading...</li>;\n    } else {\n      ingredientList = this.props.store.recipeDetails.ingredients.map(\n        (item, index) => {\n          return (\n            <li item key={index}>\n              {item}{' '}\n            </li>\n          );\n        }\n      );\n    }\n    let updated = '';\n    let posted;\n    if (this.props.store.recipeDetails.date_updated != null) {\n      const date_updated = this.props.store.recipeDetails.date_updated;\n      const updatedYear = date_updated.substring(0, 4);\n      const updatedMonth = date_updated.substring(5, 7);\n      const updatedDay = date_updated.substring(8, 10);\n      const updatedDate = updatedMonth + '/' + updatedDay + '/' + updatedYear;\n      updated = `Updated: ${updatedDate}`;\n    }\n    if (this.props.store.recipeDetails.date_posted != null) {\n      const date_posted = this.props.store.recipeDetails.date_posted;\n      const postedYear = date_posted.substring(0, 4);\n      const postedMonth = date_posted.substring(5, 7);\n      const postedDay = date_posted.substring(8, 10);\n      posted = postedMonth + '/' + postedDay + '/' + postedYear;\n    }\n    let image = (\n      <div className=\"medium-food-image-placeholder medium-food-image\"></div>\n    );\n    if (this.props.store.recipeDetails.picture != '') {\n      image = (\n        <img\n          className=\"food-image\"\n          src={this.props.store.recipeDetails.picture}\n          alt={this.props.store.recipeDetails.recipe_name}\n        />\n      );\n    }\n    return (\n      <div className=\"container\">\n        <Grid container spacing={1} direction=\"row\" justify=\"center\">\n          <Grid item xs={12} style={{ textAlign: 'center' }}>\n            <h2 item xs={4} wrap=\"wrap\" className=\"recipe-title\">\n              {this.props.store.recipeDetails.recipe_name}\n            </h2>\n          </Grid>\n          <Grid item xs={12} style={{ textAlign: 'center' }}>\n            <span item wrap=\"wrap\">\n              Creator: {this.props.store.recipeDetails.first_name} Posted:{' '}\n              {posted} {updated}\n            </span>\n          </Grid>\n          <Grid item xs={8} align=\"center\">\n            {image}\n          </Grid>\n          <Grid item xs={7}>\n            <Box>\n              <p style={{ textAlign: 'center' }}>\n                {this.props.store.recipeDetails.brief_description}\n              </p>\n            </Box>\n          </Grid>\n          <Grid\n            container\n            item\n            xs={12}\n            spacing={4}\n            direction=\"row\"\n            justify=\"center\"\n          >\n            <Grid item>\n              <Box pb={2} mb={2} borderBottom={1} pt={2} borderTop={1}>\n                <div>Prep Time: {this.props.store.recipeDetails.prep_time}</div>\n                <div>Cook Time: {this.props.store.recipeDetails.cook_time}</div>\n              </Box>\n              <Box mb={3}>\n                <ul\n                  item\n                  style={{ listStyleType: 'none', margin: '0', padding: '0' }}\n                >\n                  {ingredientList}\n                </ul>\n              </Box>\n            </Grid>\n            <Grid item xs={12} sm={7}>\n              <Box pt={2} borderTop={1}>\n                <div\n                  className=\"instructions\"\n                  style={{ whiteSpace: 'pre-wrap' }}\n                >\n                  {this.props.store.recipeDetails.instructions}\n                </div>\n              </Box>\n            </Grid>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(Details);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\nimport { Link } from 'react-router-dom';\n\n// Material-UI Imports\nimport { Grid, Checkbox, FormControlLabel, Button } from '@material-ui/core';\n\nclass AddRecipe extends Component {\n  state = {\n    recipe: {\n      recipe_name: '',\n      picture: '',\n      prep_time: '',\n      cook_time: '',\n      brief_description: '',\n      instructions: '',\n      user_id: this.props.store.user.id,\n      dish_id: [],\n      materials: [\n        {\n          ingredient: '',\n          quantity: '',\n          unit_id: '',\n        },\n      ],\n    },\n  };\n\n  componentDidMount() {\n    this.props.dispatch({\n      type: 'GET_UNITS',\n    });\n    this.props.dispatch({\n      type: 'GET_DISH_LIST',\n    });\n    console.log('in add recipe', this.props.store.theUnits);\n  }\n\n  handleSelect(i, event) {\n    const { name, value } = event.target;\n    let materials = [...this.state.recipe.materials];\n    materials[i] = { ...materials[i], unit_id: value };\n    this.setState({\n      recipe: {\n        ...this.state.recipe,\n        materials,\n      },\n    });\n  }\n\n  handleIngredientChange(i, event) {\n    const { name, value } = event.target;\n    let materials = [...this.state.recipe.materials];\n    materials[i] = { ...materials[i], [name]: value };\n    this.setState({\n      recipe: {\n        ...this.state.recipe,\n        materials,\n      },\n    });\n  }\n\n  handleChangeFor = (propertyName) => (event) => {\n    this.setState({\n      recipe: {\n        ...this.state.recipe,\n        [propertyName]: event.target.value,\n      },\n    });\n  };\n\n  handleCheckbox = (event) => {\n    this.setState({\n      recipe: {\n        ...this.state.recipe,\n        dish_id: [...this.state.recipe.dish_id, event.target.value],\n      },\n    });\n  };\n\n  handleSave = () => {\n    this.props.dispatch({\n      type: 'ADD_RECIPE',\n      payload: this.state.recipe,\n    });\n  };\n\n  addIngredients = () => {\n    this.setState({\n      recipe: {\n        ...this.state.recipe,\n        materials: [\n          ...this.state.recipe.materials,\n          { ingredient: '', quantity: '', unit_id: '' },\n        ],\n      },\n    });\n  };\n\n  render() {\n    const ingredientFields = this.state.recipe.materials.map((el, i) => {\n      return (\n        <div key={i}>\n          <input\n            placeholder=\"Ingredient\"\n            type=\"text\"\n            name=\"ingredient\"\n            // value={el.ingredient || ''}\n            onChange={this.handleIngredientChange.bind(this, i)}\n          />\n          <input\n            className=\"input-qty\"\n            placeholder=\"QTY\"\n            type=\"number\"\n            name=\"quantity\"\n            // value={el.quantity || ''}\n            onChange={this.handleIngredientChange.bind(this, i)}\n          />\n          <select\n            key={i}\n            name=\"unit_id\"\n            // value={el.Measurement || ''}\n            onChange={this.handleSelect.bind(this, i)}\n          >\n            <option>Measurement</option>\n            {this.props.store.theUnits.map((item, index) => (\n              <option key={index} value={item.id}>\n                {item.unit}\n              </option>\n            ))}\n          </select>\n        </div>\n      );\n    });\n    return (\n      <div>\n        <h2 style={{ textAlign: 'center' }}>Add a new Recipe!</h2>\n        <div>\n          <Grid container spacing={1} direction=\"row\" justify=\"center\">\n            <Grid item>\n              <input\n                placeholder=\"Recipe Name\"\n                type=\"text\"\n                onChange={this.handleChangeFor('recipe_name')}\n              />\n            </Grid>\n          </Grid>\n\n          <Grid container spacing={1} direction=\"row\" justify=\"center\">\n            <Grid item>\n              <input\n                key=\"1\"\n                placeholder=\"Prep Time\"\n                type=\"number\"\n                onChange={this.handleChangeFor('prep_time')}\n              />\n              <input\n                key=\"2\"\n                placeholder=\"Cook Time\"\n                type=\"number\"\n                onChange={this.handleChangeFor('cook_time')}\n              />\n            </Grid>\n          </Grid>\n\n          <Grid container spacing={1} direction=\"row\" justify=\"center\">\n            <Grid item>{ingredientFields}</Grid>\n          </Grid>\n\n          <Grid container spacing={1} direction=\"row\" justify=\"center\">\n            <Grid item>\n              <Button onClick={this.addIngredients} variant=\"contained\">\n                Add another Ingredient\n              </Button>\n            </Grid>\n          </Grid>\n\n          <Grid container spacing={1} direction=\"row\" justify=\"center\">\n            <Grid item>\n              {this.props.store.theDishList.map((item, index) => (\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      key={index.toString()}\n                      value={item.id}\n                      onChange={this.handleCheckbox}\n                      name=\"checked\"\n                      color=\"primary\"\n                    />\n                  }\n                  label={item.dish_types}\n                />\n              ))}\n            </Grid>\n          </Grid>\n\n          <Grid container spacing={1} direction=\"row\" justify=\"center\">\n            <Grid item xs={10}>\n              <textarea\n                className=\"brief-desc\"\n                placeholder=\"Brief Description\"\n                type=\"text\"\n                rows=\"4\"\n                cols\n                onChange={this.handleChangeFor('brief_description')}\n              />\n            </Grid>\n            <Grid item xs={10}>\n              <textarea\n                className=\"cook-instruct\"\n                placeholder=\"Cooking Instructions\"\n                type=\"text\"\n                rows=\"4\"\n                cols\n                onChange={this.handleChangeFor('instructions')}\n              />\n            </Grid>\n          </Grid>\n\n          <div style={{ marginTop: '20px' }}>\n            <Grid container spacing={10} direction=\"row\" justify=\"center\">\n              <Grid item>\n                <Link to=\"/home\" style={{ textDecoration: 'none' }}>\n                  <Button variant=\"contained\">Cancel</Button>\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link to=\"/home\" style={{ textDecoration: 'none' }}>\n                  <Button onClick={this.handleSave} variant=\"contained\">\n                    Save\n                  </Button>\n                </Link>\n              </Grid>\n            </Grid>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(AddRecipe);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\n// Material-UI Imports\nimport { Grid, Checkbox, FormControlLabel, Button } from '@material-ui/core';\n\nclass AdminPage extends Component {\n  componentDidMount() {\n    this.props.dispatch({ type: 'GET_ACCESS' });\n  }\n\n  handleDelete = (event) => {\n    this.props.dispatch({\n      type: 'DELETE_USER',\n      payload: event.currentTarget.value,\n    });\n    this.props.dispatch({ type: 'GET_ACCESS' });\n    console.log('DELETE', event.currentTarget.value);\n  };\n\n  handleApprove = (event) => {\n    this.props.dispatch({\n      type: 'APPROVE_USER',\n      payload: event.currentTarget.value,\n    });\n    this.props.dispatch({ type: 'GET_ACCESS' });\n    console.log('APPROVE', event.currentTarget.value);\n  };\n\n  render() {\n    let userList;\n    if (this.props.store.user.access_level != 0) {\n      userList = (\n        <h2 style={{ textAlign: 'center' }}>\n          You are not authorized to view this area.\n        </h2>\n      );\n    } else {\n      if (this.props.store.theAccess === undefined) {\n        userList = <li key={0}>Loading...</li>;\n      } else {\n        userList = this.props.store.theAccess.map((item, index) => {\n          if (this.props.store.theAccess[index].access_level == 2) {\n            return (\n              <li style={{ marginBottom: '15px' }} key={index}>\n                UN: {item.username} First: {item.first_name} Last:{' '}\n                {item.last_name} Email: {item.email}{' '}\n                <Button\n                  value={item.id}\n                  size=\"small\"\n                  variant=\"contained\"\n                  onClick={this.handleDelete}\n                >\n                  DELETE\n                </Button>{' '}\n                <Button\n                  value={item.id}\n                  size=\"small\"\n                  variant=\"contained\"\n                  onClick={this.handleApprove}\n                >\n                  APPROVE\n                </Button>\n              </li>\n            );\n          }\n        });\n      }\n    }\n    return (\n      <div>\n        <h2 style={{ textAlign: 'center' }}>Admin Page</h2>\n        <div className=\"new-users\">\n          <ul style={{ listStyleType: 'none' }}>{userList}</ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(AdminPage);\n","import React, { Component } from 'react';\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\n\nimport { connect } from 'react-redux';\n\nimport Nav from '../Nav/Nav';\nimport Footer from '../Footer/Footer';\n\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute';\n\nimport AboutPage from '../AboutPage/AboutPage';\nimport InfoPage from '../InfoPage/InfoPage';\nimport LandingPage from '../LandingPage/LandingPage';\nimport LoginPage from '../LoginPage/LoginPage';\nimport RegisterPage from '../RegisterPage/RegisterPage';\nimport BrowseCreator from '../BrowseCreator/BrowseCreator';\nimport DishType from '../DishType/DishType';\nimport AllBy from '../AllBy/AllBy';\nimport ByDishType from '../ByDishType/ByDishType';\nimport Details from '../Details/Details';\nimport AddRecipe from '../AddRecipe/AddRecipe';\nimport AdminPage from '../AdminPage/AdminPage';\n\nimport './App.css';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.dispatch({ type: 'FETCH_USER' });\n    this.props.dispatch({ type: 'GET_CREATORS' });\n    this.props.dispatch({ type: 'GET_DISH_TYPES' });\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"mainContent\">\n          <Nav />\n          <Switch>\n            {/* Visiting localhost:3000 will redirect to localhost:3000/home */}\n            <Redirect exact from=\"/\" to=\"/home\" />\n\n            <Route\n              // with authRedirect:\n              // - if logged in, redirects to \"/user\"\n              // - else shows LandingPage at \"/home\"\n              exact\n              path=\"/home\"\n              component={LandingPage}\n            />\n\n            {/* Visiting localhost:3000/about will show the about page. */}\n            <Route\n              // shows AboutPage at all times (logged in or not)\n              exact\n              path=\"/about\"\n              component={AboutPage}\n            />\n\n            <Route\n              // route to browse by creator\n              exact\n              path=\"/creator\"\n              component={BrowseCreator}\n            />\n\n            <Route\n              // route to browse by creator\n              exact\n              path=\"/creator_dishes/:id\"\n              component={AllBy}\n            />\n\n            <Route\n              // route to browse dishes by type\n              exact\n              path=\"/details/:id\"\n              component={Details}\n            />\n\n            <Route\n              // route to browse by dish type\n              exact\n              path=\"/dishtype\"\n              component={DishType}\n            />\n\n            <Route\n              // route to browse by dish type\n              exact\n              path=\"/add-new\"\n              component={AddRecipe}\n            />\n\n            <Route\n              // route to browse dishes by type\n              exact\n              path=\"/typeofdish/:id\"\n              component={ByDishType}\n            />\n\n            <ProtectedRoute\n              // logged in shows InfoPage else shows LoginPage\n              exact\n              path=\"/info\"\n              component={InfoPage}\n            />\n\n            <ProtectedRoute\n              // logged in shows InfoPage else shows LoginPage\n              exact\n              path=\"/admin\"\n              component={AdminPage}\n            />\n\n            {/* When a value is supplied for the authRedirect prop the user will\n            be redirected to the path supplied when logged in, otherwise they will\n            be taken to the component and path supplied. */}\n            <ProtectedRoute\n              // with authRedirect:\n              // - if logged in, redirects to \"/user\"\n              // - else shows LoginPage at /login\n              exact\n              path=\"/login\"\n              component={LoginPage}\n              authRedirect=\"/home\"\n            />\n            <ProtectedRoute\n              // with authRedirect:\n              // - if logged in, redirects to \"/user\"\n              // - else shows RegisterPage at \"/registration\"\n              exact\n              path=\"/registration\"\n              component={RegisterPage}\n              authRedirect=\"/home\"\n            />\n\n            {/* If none of the other routes matched, we will show a 404. */}\n            <Route render={() => <h1>404</h1>} />\n          </Switch>\n          <Footer />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default connect()(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\n\nimport rootReducer from './redux/reducers/_root.reducer'; // imports ./redux/reducers/index.js\nimport rootSaga from './redux/sagas/_root.saga'; // imports ./redux/sagas/index.js\n\nimport App from './components/App/App';\n\nconst sagaMiddleware = createSagaMiddleware();\n\n// this line creates an array of all of redux middleware you want to use\n// we don't want a whole ton of console logs in our production code\n// logger will only be added to your project if your in development mode\nconst middlewareList = process.env.NODE_ENV === 'development' ?\n  [sagaMiddleware, logger] :\n  [sagaMiddleware];\n\nconst store = createStore(\n  // tells the saga middleware to use the rootReducer\n  // rootSaga contains all of our other reducers\n  rootReducer,\n  // adds all middleware to our project including saga and logger\n  applyMiddleware(...middlewareList),\n);\n\n// tells the saga middleware to use the rootSaga\n// rootSaga contains all of our other sagas\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('react-root'),\n);\n"],"sourceRoot":""}